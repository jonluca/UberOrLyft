'use strict';
'use es6';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _requestPromise = require('request-promise');

var _requestPromise2 = _interopRequireDefault(_requestPromise);

var _Subpath = require('./data/Subpath');

var _Subpath2 = _interopRequireDefault(_Subpath);

var _CoordinateBuilder = require('./data/builders/CoordinateBuilder');

var _CoordinateBuilder2 = _interopRequireDefault(_CoordinateBuilder);

var _RideTypesSearchBuilder = require('./search/builders/RideTypesSearchBuilder');

var _RideTypesSearchBuilder2 = _interopRequireDefault(_RideTypesSearchBuilder);

var _DriverEtaSearchBuilder = require('./search/builders/DriverEtaSearchBuilder');

var _DriverEtaSearchBuilder2 = _interopRequireDefault(_DriverEtaSearchBuilder);

var _RideEstimatesSearchBuilder = require('./search/builders/RideEstimatesSearchBuilder');

var _RideEstimatesSearchBuilder2 = _interopRequireDefault(_RideEstimatesSearchBuilder);

var _NearbyDriversSearchBuilder = require('./search/builders/NearbyDriversSearchBuilder');

var _NearbyDriversSearchBuilder2 = _interopRequireDefault(_NearbyDriversSearchBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Lyft = function () {
  function Lyft(clientId, clientSecret) {
    _classCallCheck(this, Lyft);

    this.clientId = clientId;
    this.clientSecret = clientSecret;

    this.tokenType;
    this.accessToken;
    this.expiresIn;
    this.scope;

    this.expirationDate;
  }

  _createClass(Lyft, [{
    key: 'getAccessToken',
    value: function getAccessToken() {
      var _this = this;

      return (0, _requestPromise2.default)({
        method: 'POST',
        uri: 'https://api.lyft.com/oauth/token',
        auth: {
          username: this.clientId,
          password: this.clientSecret
        },
        headers: {
          'Content-Type': 'application/json'
        },
        body: {
          grant_type: 'client_credentials'
        },
        json: true,
        timeout: 5000
      }).then(function (result) {
        _this.tokenType = result.token_type;
        _this.accessToken = result.access_token;
        _this.expiresIn = result.expires_in;
        _this.scope = result.scope;

        var tomorrow = new Date();
        tomorrow.setDate(tomorrow.getDate() + 1);
        _this.expirationDate = tomorrow;

        return result;
      }).catch(function (err) {
        throw new Error(err);
      });
    }
  }, {
    key: 'getRideTypes',
    value: function getRideTypes(search) {
      return this.execute(_Subpath2.default.RIDE_TYPES, _RideTypesSearchBuilder2.default.build(search).toParameters().toJS());
    }
  }, {
    key: 'getDriverEta',
    value: function getDriverEta(search) {
      return this.execute(_Subpath2.default.DRIVER_ETA, _DriverEtaSearchBuilder2.default.build(search).toParameters().toJS());
    }
  }, {
    key: 'getRideEstimates',
    value: function getRideEstimates(search) {
      return this.execute(_Subpath2.default.RIDE_ESTIMATES, _RideEstimatesSearchBuilder2.default.build(search).toParameters().toJS());
    }
  }, {
    key: 'getNearbyDrivers',
    value: function getNearbyDrivers(search) {
      return this.execute(_Subpath2.default.NEARBY_DRIVERS, _NearbyDriversSearchBuilder2.default.build(search).toParameters().toJS());
    }
  }, {
    key: 'execute',
    value: function () {
      var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(subpath, parameters) {
        var options;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return this.buildOptions(subpath, parameters);

              case 2:
                options = _context.sent;
                return _context.abrupt('return', (0, _requestPromise2.default)(options).then(function (result) {
                  return result;
                }).catch(function (err) {
                  throw new Error(err);
                }));

              case 4:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function execute(_x, _x2) {
        return _ref.apply(this, arguments);
      }

      return execute;
    }()
  }, {
    key: 'buildOptions',
    value: function () {
      var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(subpath, parameters) {
        var nowDate;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                nowDate = new Date();

                if (!(!this.tokenType || !this.accessToken || !this.expirationDate || nowDate > this.expirationDate)) {
                  _context2.next = 4;
                  break;
                }

                _context2.next = 4;
                return this.getAccessToken();

              case 4:
                return _context2.abrupt('return', {
                  uri: 'https://api.lyft.com/v1/' + subpath.value,
                  qs: parameters,
                  headers: {
                    Authorization: this.tokenType + ' ' + this.accessToken
                  },
                  json: true,
                  timeout: 5000
                });

              case 5:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function buildOptions(_x3, _x4) {
        return _ref2.apply(this, arguments);
      }

      return buildOptions;
    }()
  }]);

  return Lyft;
}();

exports.default = Lyft;